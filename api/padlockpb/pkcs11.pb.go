// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.1
// source: pkcs11.proto

package padlockpb

import (
	_ "github.com/LLKennedy/protoc-gen-tsjson/tsjsonpb"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ModuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CryptokiVersion    *Version `protobuf:"bytes,1,opt,name=cryptoki_version,json=cryptokiVersion,proto3" json:"cryptoki_version,omitempty"`
	ManufacturerId     string   `protobuf:"bytes,2,opt,name=manufacturer_id,json=manufacturerId,proto3" json:"manufacturer_id,omitempty"`
	Flags              uint64   `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	LibraryDescription string   `protobuf:"bytes,4,opt,name=library_description,json=libraryDescription,proto3" json:"library_description,omitempty"`
	LibraryVersion     *Version `protobuf:"bytes,5,opt,name=library_version,json=libraryVersion,proto3" json:"library_version,omitempty"`
}

func (x *ModuleInfo) Reset() {
	*x = ModuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkcs11_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInfo) ProtoMessage() {}

func (x *ModuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkcs11_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInfo.ProtoReflect.Descriptor instead.
func (*ModuleInfo) Descriptor() ([]byte, []int) {
	return file_pkcs11_proto_rawDescGZIP(), []int{0}
}

func (x *ModuleInfo) GetCryptokiVersion() *Version {
	if x != nil {
		return x.CryptokiVersion
	}
	return nil
}

func (x *ModuleInfo) GetManufacturerId() string {
	if x != nil {
		return x.ManufacturerId
	}
	return ""
}

func (x *ModuleInfo) GetFlags() uint64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *ModuleInfo) GetLibraryDescription() string {
	if x != nil {
		return x.LibraryDescription
	}
	return ""
}

func (x *ModuleInfo) GetLibraryVersion() *Version {
	if x != nil {
		return x.LibraryVersion
	}
	return nil
}

type SlotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SlotDescription string     `protobuf:"bytes,2,opt,name=slot_description,json=slotDescription,proto3" json:"slot_description,omitempty"`
	ManufacturerId  string     `protobuf:"bytes,3,opt,name=manufacturer_id,json=manufacturerId,proto3" json:"manufacturer_id,omitempty"`
	Flags           uint64     `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	HardwareVersion *Version   `protobuf:"bytes,5,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	FirmwareVersion *Version   `protobuf:"bytes,6,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	TokenInfo       *TokenInfo `protobuf:"bytes,7,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
}

func (x *SlotInfo) Reset() {
	*x = SlotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkcs11_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotInfo) ProtoMessage() {}

func (x *SlotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkcs11_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotInfo.ProtoReflect.Descriptor instead.
func (*SlotInfo) Descriptor() ([]byte, []int) {
	return file_pkcs11_proto_rawDescGZIP(), []int{1}
}

func (x *SlotInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SlotInfo) GetSlotDescription() string {
	if x != nil {
		return x.SlotDescription
	}
	return ""
}

func (x *SlotInfo) GetManufacturerId() string {
	if x != nil {
		return x.ManufacturerId
	}
	return ""
}

func (x *SlotInfo) GetFlags() uint64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *SlotInfo) GetHardwareVersion() *Version {
	if x != nil {
		return x.HardwareVersion
	}
	return nil
}

func (x *SlotInfo) GetFirmwareVersion() *Version {
	if x != nil {
		return x.FirmwareVersion
	}
	return nil
}

func (x *SlotInfo) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label              string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	ManufacturerId     string   `protobuf:"bytes,2,opt,name=manufacturer_id,json=manufacturerId,proto3" json:"manufacturer_id,omitempty"`
	Model              string   `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	SerialNumber       string   `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Flags              uint64   `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	MaxSessionCount    uint64   `protobuf:"varint,6,opt,name=max_session_count,json=maxSessionCount,proto3" json:"max_session_count,omitempty"`
	SessionCount       uint64   `protobuf:"varint,7,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	MaxRwSessionCount  uint64   `protobuf:"varint,8,opt,name=max_rw_session_count,json=maxRwSessionCount,proto3" json:"max_rw_session_count,omitempty"`
	RwSessionCount     uint64   `protobuf:"varint,9,opt,name=rw_session_count,json=rwSessionCount,proto3" json:"rw_session_count,omitempty"`
	MaxPinLen          uint64   `protobuf:"varint,10,opt,name=max_pin_len,json=maxPinLen,proto3" json:"max_pin_len,omitempty"`
	MinPinLen          uint64   `protobuf:"varint,11,opt,name=min_pin_len,json=minPinLen,proto3" json:"min_pin_len,omitempty"`
	TotalPublicMemory  uint64   `protobuf:"varint,12,opt,name=total_public_memory,json=totalPublicMemory,proto3" json:"total_public_memory,omitempty"`
	FreePublicMemory   uint64   `protobuf:"varint,13,opt,name=free_public_memory,json=freePublicMemory,proto3" json:"free_public_memory,omitempty"`
	TotalPrivateMemory uint64   `protobuf:"varint,14,opt,name=total_private_memory,json=totalPrivateMemory,proto3" json:"total_private_memory,omitempty"`
	FreePrivateMemory  uint64   `protobuf:"varint,15,opt,name=free_private_memory,json=freePrivateMemory,proto3" json:"free_private_memory,omitempty"`
	HardwareVersion    *Version `protobuf:"bytes,16,opt,name=hardware_version,json=hardwareVersion,proto3" json:"hardware_version,omitempty"`
	FirmwareVersion    *Version `protobuf:"bytes,17,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	Utctime            string   `protobuf:"bytes,18,opt,name=utctime,proto3" json:"utctime,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkcs11_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkcs11_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_pkcs11_proto_rawDescGZIP(), []int{2}
}

func (x *TokenInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *TokenInfo) GetManufacturerId() string {
	if x != nil {
		return x.ManufacturerId
	}
	return ""
}

func (x *TokenInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *TokenInfo) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *TokenInfo) GetFlags() uint64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *TokenInfo) GetMaxSessionCount() uint64 {
	if x != nil {
		return x.MaxSessionCount
	}
	return 0
}

func (x *TokenInfo) GetSessionCount() uint64 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

func (x *TokenInfo) GetMaxRwSessionCount() uint64 {
	if x != nil {
		return x.MaxRwSessionCount
	}
	return 0
}

func (x *TokenInfo) GetRwSessionCount() uint64 {
	if x != nil {
		return x.RwSessionCount
	}
	return 0
}

func (x *TokenInfo) GetMaxPinLen() uint64 {
	if x != nil {
		return x.MaxPinLen
	}
	return 0
}

func (x *TokenInfo) GetMinPinLen() uint64 {
	if x != nil {
		return x.MinPinLen
	}
	return 0
}

func (x *TokenInfo) GetTotalPublicMemory() uint64 {
	if x != nil {
		return x.TotalPublicMemory
	}
	return 0
}

func (x *TokenInfo) GetFreePublicMemory() uint64 {
	if x != nil {
		return x.FreePublicMemory
	}
	return 0
}

func (x *TokenInfo) GetTotalPrivateMemory() uint64 {
	if x != nil {
		return x.TotalPrivateMemory
	}
	return 0
}

func (x *TokenInfo) GetFreePrivateMemory() uint64 {
	if x != nil {
		return x.FreePrivateMemory
	}
	return 0
}

func (x *TokenInfo) GetHardwareVersion() *Version {
	if x != nil {
		return x.HardwareVersion
	}
	return nil
}

func (x *TokenInfo) GetFirmwareVersion() *Version {
	if x != nil {
		return x.FirmwareVersion
	}
	return nil
}

func (x *TokenInfo) GetUtctime() string {
	if x != nil {
		return x.Utctime
	}
	return ""
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major uint32 `protobuf:"varint,1,opt,name=Major,proto3" json:"Major,omitempty"`
	Minor uint32 `protobuf:"varint,2,opt,name=Minor,proto3" json:"Minor,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkcs11_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_pkcs11_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_pkcs11_proto_rawDescGZIP(), []int{3}
}

func (x *Version) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Version) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

type Mechanism struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MechanismType `protobuf:"varint,1,opt,name=type,proto3,enum=padlock.MechanismType" json:"type,omitempty"`
}

func (x *Mechanism) Reset() {
	*x = Mechanism{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkcs11_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mechanism) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mechanism) ProtoMessage() {}

func (x *Mechanism) ProtoReflect() protoreflect.Message {
	mi := &file_pkcs11_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mechanism.ProtoReflect.Descriptor instead.
func (*Mechanism) Descriptor() ([]byte, []int) {
	return file_pkcs11_proto_rawDescGZIP(), []int{4}
}

func (x *Mechanism) GetType() MechanismType {
	if x != nil {
		return x.Type
	}
	return MechanismType_CKM_UNDEFINED_UNKNOWN
}

var File_pkcs11_proto protoreflect.FileDescriptor

var file_pkcs11_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6b, 0x63, 0x73, 0x31, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x0c, 0x74, 0x73, 0x6a, 0x73, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x6b, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6b, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb1,
	0x02, 0x0a, 0x08, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x3b, 0x0a, 0x10, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xdb, 0x05, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6d, 0x61, 0x78,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x77, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x6d, 0x61, 0x78, 0x52, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x77, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x77,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0b,
	0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x13,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12,
	0x66, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x66, 0x72, 0x65, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13,
	0x66, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x66, 0x72, 0x65, 0x65, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x10,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x10, 0x66, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x74, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x74, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x35, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x22, 0x37, 0x0a, 0x09, 0x4d, 0x65, 0x63, 0x68, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x46, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c,
	0x4c, 0x4b, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x79, 0x2f, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b,
	0x2f, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x62, 0x82, 0xd9, 0x66, 0x10, 0x40, 0x6c,
	0x6c, 0x6b, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x8a, 0xd9,
	0x66, 0x06, 0x70, 0x6b, 0x63, 0x73, 0x31, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkcs11_proto_rawDescOnce sync.Once
	file_pkcs11_proto_rawDescData = file_pkcs11_proto_rawDesc
)

func file_pkcs11_proto_rawDescGZIP() []byte {
	file_pkcs11_proto_rawDescOnce.Do(func() {
		file_pkcs11_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkcs11_proto_rawDescData)
	})
	return file_pkcs11_proto_rawDescData
}

var file_pkcs11_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkcs11_proto_goTypes = []interface{}{
	(*ModuleInfo)(nil), // 0: padlock.ModuleInfo
	(*SlotInfo)(nil),   // 1: padlock.SlotInfo
	(*TokenInfo)(nil),  // 2: padlock.TokenInfo
	(*Version)(nil),    // 3: padlock.Version
	(*Mechanism)(nil),  // 4: padlock.Mechanism
	(MechanismType)(0), // 5: padlock.MechanismType
}
var file_pkcs11_proto_depIdxs = []int32{
	3, // 0: padlock.ModuleInfo.cryptoki_version:type_name -> padlock.Version
	3, // 1: padlock.ModuleInfo.library_version:type_name -> padlock.Version
	3, // 2: padlock.SlotInfo.hardware_version:type_name -> padlock.Version
	3, // 3: padlock.SlotInfo.firmware_version:type_name -> padlock.Version
	2, // 4: padlock.SlotInfo.token_info:type_name -> padlock.TokenInfo
	3, // 5: padlock.TokenInfo.hardware_version:type_name -> padlock.Version
	3, // 6: padlock.TokenInfo.firmware_version:type_name -> padlock.Version
	5, // 7: padlock.Mechanism.type:type_name -> padlock.MechanismType
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkcs11_proto_init() }
func file_pkcs11_proto_init() {
	if File_pkcs11_proto != nil {
		return
	}
	file_mechanisms_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pkcs11_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkcs11_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkcs11_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkcs11_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkcs11_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mechanism); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkcs11_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkcs11_proto_goTypes,
		DependencyIndexes: file_pkcs11_proto_depIdxs,
		MessageInfos:      file_pkcs11_proto_msgTypes,
	}.Build()
	File_pkcs11_proto = out.File
	file_pkcs11_proto_rawDesc = nil
	file_pkcs11_proto_goTypes = nil
	file_pkcs11_proto_depIdxs = nil
}
