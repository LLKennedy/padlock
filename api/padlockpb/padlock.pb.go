// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.1
// source: padlock.proto

package padlockpb

import (
	_ "github.com/LLKennedy/protoc-gen-tsjson/tsjsonpb"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AuthHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthHello) Reset() {
	*x = AuthHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthHello) ProtoMessage() {}

func (x *AuthHello) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthHello.ProtoReflect.Descriptor instead.
func (*AuthHello) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{0}
}

type AuthToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AuthToken) Reset() {
	*x = AuthToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthToken) ProtoMessage() {}

func (x *AuthToken) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthToken.ProtoReflect.Descriptor instead.
func (*AuthToken) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{1}
}

func (x *AuthToken) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationListModulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *AuthToken `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *ApplicationListModulesRequest) Reset() {
	*x = ApplicationListModulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationListModulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationListModulesRequest) ProtoMessage() {}

func (x *ApplicationListModulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationListModulesRequest.ProtoReflect.Descriptor instead.
func (*ApplicationListModulesRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationListModulesRequest) GetAuth() *AuthToken {
	if x != nil {
		return x.Auth
	}
	return nil
}

type ApplicationListModulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules map[string]*ModuleInfo `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ApplicationListModulesResponse) Reset() {
	*x = ApplicationListModulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationListModulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationListModulesResponse) ProtoMessage() {}

func (x *ApplicationListModulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationListModulesResponse.ProtoReflect.Descriptor instead.
func (*ApplicationListModulesResponse) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{3}
}

func (x *ApplicationListModulesResponse) GetModules() map[string]*ModuleInfo {
	if x != nil {
		return x.Modules
	}
	return nil
}

type ApplicationConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *AuthToken `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Module string     `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *ApplicationConnectRequest) Reset() {
	*x = ApplicationConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationConnectRequest) ProtoMessage() {}

func (x *ApplicationConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationConnectRequest.ProtoReflect.Descriptor instead.
func (*ApplicationConnectRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{4}
}

func (x *ApplicationConnectRequest) GetAuth() *AuthToken {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ApplicationConnectRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type ApplicationConnectUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//	*ApplicationConnectUpdate_Info
	//	*ApplicationConnectUpdate_ChangedSlots
	Update isApplicationConnectUpdate_Update `protobuf_oneof:"update"`
}

func (x *ApplicationConnectUpdate) Reset() {
	*x = ApplicationConnectUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationConnectUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationConnectUpdate) ProtoMessage() {}

func (x *ApplicationConnectUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationConnectUpdate.ProtoReflect.Descriptor instead.
func (*ApplicationConnectUpdate) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{5}
}

func (m *ApplicationConnectUpdate) GetUpdate() isApplicationConnectUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *ApplicationConnectUpdate) GetInfo() *ModuleInfo {
	if x, ok := x.GetUpdate().(*ApplicationConnectUpdate_Info); ok {
		return x.Info
	}
	return nil
}

func (x *ApplicationConnectUpdate) GetChangedSlots() *ModuleListSlotsResponse {
	if x, ok := x.GetUpdate().(*ApplicationConnectUpdate_ChangedSlots); ok {
		return x.ChangedSlots
	}
	return nil
}

type isApplicationConnectUpdate_Update interface {
	isApplicationConnectUpdate_Update()
}

type ApplicationConnectUpdate_Info struct {
	Info *ModuleInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type ApplicationConnectUpdate_ChangedSlots struct {
	ChangedSlots *ModuleListSlotsResponse `protobuf:"bytes,2,opt,name=changed_slots,json=changedSlots,proto3,oneof"`
}

func (*ApplicationConnectUpdate_Info) isApplicationConnectUpdate_Update() {}

func (*ApplicationConnectUpdate_ChangedSlots) isApplicationConnectUpdate_Update() {}

type ModuleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *AuthToken `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Module string     `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *ModuleInfoRequest) Reset() {
	*x = ModuleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInfoRequest) ProtoMessage() {}

func (x *ModuleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInfoRequest.ProtoReflect.Descriptor instead.
func (*ModuleInfoRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{6}
}

func (x *ModuleInfoRequest) GetAuth() *AuthToken {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ModuleInfoRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type ModuleInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ModuleInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ModuleInfoResponse) Reset() {
	*x = ModuleInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInfoResponse) ProtoMessage() {}

func (x *ModuleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInfoResponse.ProtoReflect.Descriptor instead.
func (*ModuleInfoResponse) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{7}
}

func (x *ModuleInfoResponse) GetInfo() *ModuleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ModuleListSlotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *AuthToken `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Module string     `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *ModuleListSlotsRequest) Reset() {
	*x = ModuleListSlotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleListSlotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleListSlotsRequest) ProtoMessage() {}

func (x *ModuleListSlotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleListSlotsRequest.ProtoReflect.Descriptor instead.
func (*ModuleListSlotsRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{8}
}

func (x *ModuleListSlotsRequest) GetAuth() *AuthToken {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ModuleListSlotsRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type ModuleListSlotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []*SlotInfo `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *ModuleListSlotsResponse) Reset() {
	*x = ModuleListSlotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleListSlotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleListSlotsResponse) ProtoMessage() {}

func (x *ModuleListSlotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleListSlotsResponse.ProtoReflect.Descriptor instead.
func (*ModuleListSlotsResponse) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{9}
}

func (x *ModuleListSlotsResponse) GetSlots() []*SlotInfo {
	if x != nil {
		return x.Slots
	}
	return nil
}

type SlotID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *AuthToken `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Module string     `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	Slot   uint64     `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *SlotID) Reset() {
	*x = SlotID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotID) ProtoMessage() {}

func (x *SlotID) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotID.ProtoReflect.Descriptor instead.
func (*SlotID) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{10}
}

func (x *SlotID) GetAuth() *AuthToken {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SlotID) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *SlotID) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type SlotListMechanismsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *SlotID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SlotListMechanismsRequest) Reset() {
	*x = SlotListMechanismsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotListMechanismsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotListMechanismsRequest) ProtoMessage() {}

func (x *SlotListMechanismsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotListMechanismsRequest.ProtoReflect.Descriptor instead.
func (*SlotListMechanismsRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{11}
}

func (x *SlotListMechanismsRequest) GetId() *SlotID {
	if x != nil {
		return x.Id
	}
	return nil
}

type SlotListMechanismsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mechanisms []*Mechanism `protobuf:"bytes,1,rep,name=mechanisms,proto3" json:"mechanisms,omitempty"`
}

func (x *SlotListMechanismsResponse) Reset() {
	*x = SlotListMechanismsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotListMechanismsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotListMechanismsResponse) ProtoMessage() {}

func (x *SlotListMechanismsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotListMechanismsResponse.ProtoReflect.Descriptor instead.
func (*SlotListMechanismsResponse) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{12}
}

func (x *SlotListMechanismsResponse) GetMechanisms() []*Mechanism {
	if x != nil {
		return x.Mechanisms
	}
	return nil
}

type SlotInitTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *SlotID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SecurityOfficerPin string  `protobuf:"bytes,2,opt,name=security_officer_pin,json=securityOfficerPin,proto3" json:"security_officer_pin,omitempty"`
	TokenLabel         string  `protobuf:"bytes,3,opt,name=token_label,json=tokenLabel,proto3" json:"token_label,omitempty"`
}

func (x *SlotInitTokenRequest) Reset() {
	*x = SlotInitTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotInitTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotInitTokenRequest) ProtoMessage() {}

func (x *SlotInitTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotInitTokenRequest.ProtoReflect.Descriptor instead.
func (*SlotInitTokenRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{13}
}

func (x *SlotInitTokenRequest) GetId() *SlotID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SlotInitTokenRequest) GetSecurityOfficerPin() string {
	if x != nil {
		return x.SecurityOfficerPin
	}
	return ""
}

func (x *SlotInitTokenRequest) GetTokenLabel() string {
	if x != nil {
		return x.TokenLabel
	}
	return ""
}

type SlotInitTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SlotInitTokenResponse) Reset() {
	*x = SlotInitTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotInitTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotInitTokenResponse) ProtoMessage() {}

func (x *SlotInitTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotInitTokenResponse.ProtoReflect.Descriptor instead.
func (*SlotInitTokenResponse) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{14}
}

type SlotOpenSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *SlotID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WriteSession bool    `protobuf:"varint,2,opt,name=write_session,json=writeSession,proto3" json:"write_session,omitempty"`
}

func (x *SlotOpenSessionRequest) Reset() {
	*x = SlotOpenSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotOpenSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotOpenSessionRequest) ProtoMessage() {}

func (x *SlotOpenSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotOpenSessionRequest.ProtoReflect.Descriptor instead.
func (*SlotOpenSessionRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{15}
}

func (x *SlotOpenSessionRequest) GetId() *SlotID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SlotOpenSessionRequest) GetWriteSession() bool {
	if x != nil {
		return x.WriteSession
	}
	return false
}

type SlotOpenSessionUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//	*SlotOpenSessionUpdate_Uuid
	//	*SlotOpenSessionUpdate_LoggedIn
	Update isSlotOpenSessionUpdate_Update `protobuf_oneof:"update"`
}

func (x *SlotOpenSessionUpdate) Reset() {
	*x = SlotOpenSessionUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotOpenSessionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotOpenSessionUpdate) ProtoMessage() {}

func (x *SlotOpenSessionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotOpenSessionUpdate.ProtoReflect.Descriptor instead.
func (*SlotOpenSessionUpdate) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{16}
}

func (m *SlotOpenSessionUpdate) GetUpdate() isSlotOpenSessionUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *SlotOpenSessionUpdate) GetUuid() string {
	if x, ok := x.GetUpdate().(*SlotOpenSessionUpdate_Uuid); ok {
		return x.Uuid
	}
	return ""
}

func (x *SlotOpenSessionUpdate) GetLoggedIn() bool {
	if x, ok := x.GetUpdate().(*SlotOpenSessionUpdate_LoggedIn); ok {
		return x.LoggedIn
	}
	return false
}

type isSlotOpenSessionUpdate_Update interface {
	isSlotOpenSessionUpdate_Update()
}

type SlotOpenSessionUpdate_Uuid struct {
	// First response must be this UUID
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3,oneof"`
}

type SlotOpenSessionUpdate_LoggedIn struct {
	// Further responses must not be UUID
	LoggedIn bool `protobuf:"varint,1,opt,name=logged_in,json=loggedIn,proto3,oneof"`
}

func (*SlotOpenSessionUpdate_Uuid) isSlotOpenSessionUpdate_Update() {}

func (*SlotOpenSessionUpdate_LoggedIn) isSlotOpenSessionUpdate_Update() {}

type SessionID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot *SlotID `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Uuid string  `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SessionID) Reset() {
	*x = SessionID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionID) ProtoMessage() {}

func (x *SessionID) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionID.ProtoReflect.Descriptor instead.
func (*SessionID) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{17}
}

func (x *SessionID) GetSlot() *SlotID {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *SessionID) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SessionLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     *SlotID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pin                    string  `protobuf:"bytes,2,opt,name=pin,proto3" json:"pin,omitempty"`
	LoginAsSecurityOfficer bool    `protobuf:"varint,3,opt,name=login_as_security_officer,json=loginAsSecurityOfficer,proto3" json:"login_as_security_officer,omitempty"`
}

func (x *SessionLoginRequest) Reset() {
	*x = SessionLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionLoginRequest) ProtoMessage() {}

func (x *SessionLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionLoginRequest.ProtoReflect.Descriptor instead.
func (*SessionLoginRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{18}
}

func (x *SessionLoginRequest) GetId() *SlotID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SessionLoginRequest) GetPin() string {
	if x != nil {
		return x.Pin
	}
	return ""
}

func (x *SessionLoginRequest) GetLoginAsSecurityOfficer() bool {
	if x != nil {
		return x.LoginAsSecurityOfficer
	}
	return false
}

type SessionLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SessionLoginResponse) Reset() {
	*x = SessionLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionLoginResponse) ProtoMessage() {}

func (x *SessionLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionLoginResponse.ProtoReflect.Descriptor instead.
func (*SessionLoginResponse) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{19}
}

type SessionLogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SessionLogoutResponse) Reset() {
	*x = SessionLogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionLogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionLogoutResponse) ProtoMessage() {}

func (x *SessionLogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionLogoutResponse.ProtoReflect.Descriptor instead.
func (*SessionLogoutResponse) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{20}
}

type SessionListObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template []*Attribute `protobuf:"bytes,1,rep,name=template,proto3" json:"template,omitempty"`
}

func (x *SessionListObjectsRequest) Reset() {
	*x = SessionListObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionListObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionListObjectsRequest) ProtoMessage() {}

func (x *SessionListObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionListObjectsRequest.ProtoReflect.Descriptor instead.
func (*SessionListObjectsRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{21}
}

func (x *SessionListObjectsRequest) GetTemplate() []*Attribute {
	if x != nil {
		return x.Template
	}
	return nil
}

type ObjectID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *SessionID `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Uuid    string     `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ObjectID) Reset() {
	*x = ObjectID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectID) ProtoMessage() {}

func (x *ObjectID) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectID.ProtoReflect.Descriptor instead.
func (*ObjectID) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{22}
}

func (x *ObjectID) GetSession() *SessionID {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *ObjectID) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ObjectListAttributeValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *ObjectID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// True indicates it should be gathered before returning any other values
	RequestedAttributes []AttributeType `protobuf:"varint,2,rep,packed,name=requested_attributes,json=requestedAttributes,proto3,enum=padlock.AttributeType" json:"requested_attributes,omitempty"`
}

func (x *ObjectListAttributeValuesRequest) Reset() {
	*x = ObjectListAttributeValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_padlock_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectListAttributeValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectListAttributeValuesRequest) ProtoMessage() {}

func (x *ObjectListAttributeValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_padlock_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectListAttributeValuesRequest.ProtoReflect.Descriptor instead.
func (*ObjectListAttributeValuesRequest) Descriptor() ([]byte, []int) {
	return file_padlock_proto_rawDescGZIP(), []int{23}
}

func (x *ObjectListAttributeValuesRequest) GetId() *ObjectID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ObjectListAttributeValuesRequest) GetRequestedAttributes() []AttributeType {
	if x != nil {
		return x.RequestedAttributes
	}
	return nil
}

var File_padlock_proto protoreflect.FileDescriptor

var file_padlock_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x0c, 0x74, 0x73, 0x6a, 0x73, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6b, 0x63, 0x73, 0x31, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0b, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x22, 0x1f, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0xc1, 0x01,
	0x0a, 0x1e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x1a, 0x4f, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x5b, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x98,
	0x01, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x64, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x53, 0x0a, 0x11, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x3d,
	0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a,
	0x16, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x42, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x5c, 0x0a, 0x06, 0x53,
	0x6c, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x3c, 0x0a, 0x19, 0x53, 0x6c, 0x6f,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x6c, 0x6f,
	0x74, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x1a, 0x53, 0x6c, 0x6f, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69,
	0x73, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x64, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x52, 0x0a, 0x6d,
	0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x53, 0x6c,
	0x6f, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4f, 0x66, 0x66, 0x69, 0x63,
	0x65, 0x72, 0x50, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e,
	0x69, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5e, 0x0a, 0x16, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x53, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x56, 0x0a, 0x15, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x42, 0x08, 0x0a,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x44, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x6c, 0x6f,
	0x74, 0x49, 0x44, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x83, 0x01,
	0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x19, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x61, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x22, 0x4c, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x90, 0x01, 0x0a, 0x20, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x32, 0x8b, 0x08, 0x0a, 0x07, 0x50, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x33,
	0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x12, 0x2e, 0x70, 0x61,
	0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x1a,
	0x12, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x6c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x26, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x61, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x61,
	0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x64,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61,
	0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x61, 0x64,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73,
	0x12, 0x22, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53,
	0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x50, 0x6f, 0x73,
	0x74, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d,
	0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x69,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x69, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x13, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x64,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x61,
	0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x1a,
	0x1e, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70,
	0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x30, 0x01, 0x12,
	0x5f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x29, 0x2e, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x61, 0x64,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x30, 0x01,
	0x42, 0x47, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c,
	0x4c, 0x4b, 0x65, 0x6e, 0x6e, 0x65, 0x64, 0x79, 0x2f, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b,
	0x2f, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x62, 0x82, 0xd9, 0x66, 0x10, 0x40, 0x6c,
	0x6c, 0x6b, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x8a, 0xd9,
	0x66, 0x07, 0x70, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_padlock_proto_rawDescOnce sync.Once
	file_padlock_proto_rawDescData = file_padlock_proto_rawDesc
)

func file_padlock_proto_rawDescGZIP() []byte {
	file_padlock_proto_rawDescOnce.Do(func() {
		file_padlock_proto_rawDescData = protoimpl.X.CompressGZIP(file_padlock_proto_rawDescData)
	})
	return file_padlock_proto_rawDescData
}

var file_padlock_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_padlock_proto_goTypes = []interface{}{
	(*AuthHello)(nil),                        // 0: padlock.AuthHello
	(*AuthToken)(nil),                        // 1: padlock.AuthToken
	(*ApplicationListModulesRequest)(nil),    // 2: padlock.ApplicationListModulesRequest
	(*ApplicationListModulesResponse)(nil),   // 3: padlock.ApplicationListModulesResponse
	(*ApplicationConnectRequest)(nil),        // 4: padlock.ApplicationConnectRequest
	(*ApplicationConnectUpdate)(nil),         // 5: padlock.ApplicationConnectUpdate
	(*ModuleInfoRequest)(nil),                // 6: padlock.ModuleInfoRequest
	(*ModuleInfoResponse)(nil),               // 7: padlock.ModuleInfoResponse
	(*ModuleListSlotsRequest)(nil),           // 8: padlock.ModuleListSlotsRequest
	(*ModuleListSlotsResponse)(nil),          // 9: padlock.ModuleListSlotsResponse
	(*SlotID)(nil),                           // 10: padlock.SlotID
	(*SlotListMechanismsRequest)(nil),        // 11: padlock.SlotListMechanismsRequest
	(*SlotListMechanismsResponse)(nil),       // 12: padlock.SlotListMechanismsResponse
	(*SlotInitTokenRequest)(nil),             // 13: padlock.SlotInitTokenRequest
	(*SlotInitTokenResponse)(nil),            // 14: padlock.SlotInitTokenResponse
	(*SlotOpenSessionRequest)(nil),           // 15: padlock.SlotOpenSessionRequest
	(*SlotOpenSessionUpdate)(nil),            // 16: padlock.SlotOpenSessionUpdate
	(*SessionID)(nil),                        // 17: padlock.SessionID
	(*SessionLoginRequest)(nil),              // 18: padlock.SessionLoginRequest
	(*SessionLoginResponse)(nil),             // 19: padlock.SessionLoginResponse
	(*SessionLogoutResponse)(nil),            // 20: padlock.SessionLogoutResponse
	(*SessionListObjectsRequest)(nil),        // 21: padlock.SessionListObjectsRequest
	(*ObjectID)(nil),                         // 22: padlock.ObjectID
	(*ObjectListAttributeValuesRequest)(nil), // 23: padlock.ObjectListAttributeValuesRequest
	nil,                                      // 24: padlock.ApplicationListModulesResponse.ModulesEntry
	(*ModuleInfo)(nil),                       // 25: padlock.ModuleInfo
	(*SlotInfo)(nil),                         // 26: padlock.SlotInfo
	(*Mechanism)(nil),                        // 27: padlock.Mechanism
	(*Attribute)(nil),                        // 28: padlock.Attribute
	(AttributeType)(0),                       // 29: padlock.AttributeType
	(*Object)(nil),                           // 30: padlock.Object
}
var file_padlock_proto_depIdxs = []int32{
	1,  // 0: padlock.ApplicationListModulesRequest.auth:type_name -> padlock.AuthToken
	24, // 1: padlock.ApplicationListModulesResponse.modules:type_name -> padlock.ApplicationListModulesResponse.ModulesEntry
	1,  // 2: padlock.ApplicationConnectRequest.auth:type_name -> padlock.AuthToken
	25, // 3: padlock.ApplicationConnectUpdate.info:type_name -> padlock.ModuleInfo
	9,  // 4: padlock.ApplicationConnectUpdate.changed_slots:type_name -> padlock.ModuleListSlotsResponse
	1,  // 5: padlock.ModuleInfoRequest.auth:type_name -> padlock.AuthToken
	25, // 6: padlock.ModuleInfoResponse.info:type_name -> padlock.ModuleInfo
	1,  // 7: padlock.ModuleListSlotsRequest.auth:type_name -> padlock.AuthToken
	26, // 8: padlock.ModuleListSlotsResponse.slots:type_name -> padlock.SlotInfo
	1,  // 9: padlock.SlotID.auth:type_name -> padlock.AuthToken
	10, // 10: padlock.SlotListMechanismsRequest.id:type_name -> padlock.SlotID
	27, // 11: padlock.SlotListMechanismsResponse.mechanisms:type_name -> padlock.Mechanism
	10, // 12: padlock.SlotInitTokenRequest.id:type_name -> padlock.SlotID
	10, // 13: padlock.SlotOpenSessionRequest.id:type_name -> padlock.SlotID
	10, // 14: padlock.SessionID.slot:type_name -> padlock.SlotID
	10, // 15: padlock.SessionLoginRequest.id:type_name -> padlock.SlotID
	28, // 16: padlock.SessionListObjectsRequest.template:type_name -> padlock.Attribute
	17, // 17: padlock.ObjectID.session:type_name -> padlock.SessionID
	22, // 18: padlock.ObjectListAttributeValuesRequest.id:type_name -> padlock.ObjectID
	29, // 19: padlock.ObjectListAttributeValuesRequest.requested_attributes:type_name -> padlock.AttributeType
	25, // 20: padlock.ApplicationListModulesResponse.ModulesEntry.value:type_name -> padlock.ModuleInfo
	0,  // 21: padlock.Padlock.PostHello:input_type -> padlock.AuthHello
	2,  // 22: padlock.Padlock.GetApplicationListModules:input_type -> padlock.ApplicationListModulesRequest
	4,  // 23: padlock.Padlock.PostApplicationConnect:input_type -> padlock.ApplicationConnectRequest
	8,  // 24: padlock.Padlock.GetModuleListSlots:input_type -> padlock.ModuleListSlotsRequest
	6,  // 25: padlock.Padlock.GetModuleInfo:input_type -> padlock.ModuleInfoRequest
	11, // 26: padlock.Padlock.GetSlotListMechanisms:input_type -> padlock.SlotListMechanismsRequest
	13, // 27: padlock.Padlock.PostSlotInitToken:input_type -> padlock.SlotInitTokenRequest
	15, // 28: padlock.Padlock.PostSlotOpenSession:input_type -> padlock.SlotOpenSessionRequest
	18, // 29: padlock.Padlock.PutSessionLogin:input_type -> padlock.SessionLoginRequest
	17, // 30: padlock.Padlock.PutSessionLogout:input_type -> padlock.SessionID
	21, // 31: padlock.Padlock.GetSessionListObjects:input_type -> padlock.SessionListObjectsRequest
	23, // 32: padlock.Padlock.GetObjectListAttributeValues:input_type -> padlock.ObjectListAttributeValuesRequest
	1,  // 33: padlock.Padlock.PostHello:output_type -> padlock.AuthToken
	3,  // 34: padlock.Padlock.GetApplicationListModules:output_type -> padlock.ApplicationListModulesResponse
	5,  // 35: padlock.Padlock.PostApplicationConnect:output_type -> padlock.ApplicationConnectUpdate
	9,  // 36: padlock.Padlock.GetModuleListSlots:output_type -> padlock.ModuleListSlotsResponse
	7,  // 37: padlock.Padlock.GetModuleInfo:output_type -> padlock.ModuleInfoResponse
	12, // 38: padlock.Padlock.GetSlotListMechanisms:output_type -> padlock.SlotListMechanismsResponse
	14, // 39: padlock.Padlock.PostSlotInitToken:output_type -> padlock.SlotInitTokenResponse
	16, // 40: padlock.Padlock.PostSlotOpenSession:output_type -> padlock.SlotOpenSessionUpdate
	19, // 41: padlock.Padlock.PutSessionLogin:output_type -> padlock.SessionLoginResponse
	20, // 42: padlock.Padlock.PutSessionLogout:output_type -> padlock.SessionLogoutResponse
	30, // 43: padlock.Padlock.GetSessionListObjects:output_type -> padlock.Object
	28, // 44: padlock.Padlock.GetObjectListAttributeValues:output_type -> padlock.Attribute
	33, // [33:45] is the sub-list for method output_type
	21, // [21:33] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_padlock_proto_init() }
func file_padlock_proto_init() {
	if File_padlock_proto != nil {
		return
	}
	file_pkcs11_proto_init()
	file_attributes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_padlock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationListModulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationListModulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationConnectUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleListSlotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleListSlotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotListMechanismsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotListMechanismsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotInitTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotInitTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotOpenSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotOpenSessionUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionLogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionListObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_padlock_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectListAttributeValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_padlock_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ApplicationConnectUpdate_Info)(nil),
		(*ApplicationConnectUpdate_ChangedSlots)(nil),
	}
	file_padlock_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*SlotOpenSessionUpdate_Uuid)(nil),
		(*SlotOpenSessionUpdate_LoggedIn)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_padlock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_padlock_proto_goTypes,
		DependencyIndexes: file_padlock_proto_depIdxs,
		MessageInfos:      file_padlock_proto_msgTypes,
	}.Build()
	File_padlock_proto = out.File
	file_padlock_proto_rawDesc = nil
	file_padlock_proto_goTypes = nil
	file_padlock_proto_depIdxs = nil
}
