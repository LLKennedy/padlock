syntax = "proto3";

package padlock;

option go_package = "github.com/LLKennedy/padlock/padlockpb";

import "tsjson.proto";
option (tsjson.npm_package) = "@llkdemo/padlock";
option (tsjson.import_path) = "padlock";

import "pkcs11.proto";

service Padlock {
	// Auth RPCs

	// PostHello initiates a session with the application, generating an authentication token
	rpc PostHello(AuthHello) returns (AuthToken);

	// Application RPCs

	// GetApplicationListModules lists modules already connected to the application
	rpc GetApplicationListModules(ApplicationListModulesRequest) returns (ApplicationListModulesResponse);
	// PostApplicationConnect connects a new module to the application
	rpc PostApplicationConnect(ApplicationConnectRequest) returns (stream ApplicationConnectUpdate);

	// Module RPCs

	// PostModuleListSlots
	rpc PostModuleListSlots(ModuleListSlotsRequest) returns (ModuleListSlotsResponse);
	// GetModuleInfo gets info for a specific module
	rpc GetModuleInfo(ModuleInfoRequest) returns (ModuleInfoResponse);
}

message AuthHello {

}

message AuthToken {
	bytes data = 1;
}

message ApplicationListModulesRequest {
	AuthToken auth = 1;
}

message ApplicationListModulesResponse {
	map<string, ModuleInfo> modules = 1;
}

message ApplicationConnectRequest {
	AuthToken auth = 1;
	string module = 2;
}

message ApplicationConnectUpdate {
	oneof update {
		ModuleInfo info = 1;
		bool logged_in = 2;
		ModuleListSlotsResponse changed_slots = 3;
	}
}

message ModuleInfoRequest {
	AuthToken auth = 1;
	string module = 2;
}

message ModuleInfoResponse {
	ModuleInfo info = 1;
}

message ModuleListSlotsRequest {
	AuthToken auth = 1;
	string module = 2;
}

message ModuleListSlotsResponse {
	repeated SlotInfo slots = 1;
}

message SlotListMechanismsRequest {
	AuthToken auth = 1;
	string module = 2;
	uint64 slot = 3;
}

message SlotListMechanismsResponse {
	
}