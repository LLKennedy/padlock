/**
 * Code generated by mercury. DO NOT EDIT.
 * versions:
 * 	mercury v0.9.0
 * 	protoc   v3.10.1
 * source: padlock.proto
 */

import * as mercury from "@llkennedy/mercury";
import { ModuleListSlotsRequest as padlock__ModuleListSlotsRequest, ModuleListSlotsResponse as padlock__ModuleListSlotsResponse, AuthHello as padlock__AuthHello, ApplicationListModulesRequest as padlock__ApplicationListModulesRequest, ApplicationListModulesResponse as padlock__ApplicationListModulesResponse, ApplicationConnectRequest as padlock__ApplicationConnectRequest, ApplicationConnectUpdate as padlock__ApplicationConnectUpdate, AuthToken as padlock__AuthToken } from "./padlock";

export class PadlockClient extends mercury.Client {
	constructor(basePath: string | undefined = "localhost/api/Padlock", useTLS: boolean | undefined = true, client: mercury.AxiosInstance | undefined = undefined) {
		super(basePath, useTLS, client);
	}
	public async Hello(req: padlock__AuthHello): Promise<padlock__AuthToken> {
		return this.SendUnary("Hello", mercury.HTTPMethod.POST, req, padlock__AuthToken.Parse);
	}
	public async ApplicationListModules(req: padlock__ApplicationListModulesRequest): Promise<padlock__ApplicationListModulesResponse> {
		return this.SendUnary("ApplicationListModules", mercury.HTTPMethod.POST, req, padlock__ApplicationListModulesResponse.Parse);
	}
	public async ApplicationConnect(req: padlock__ApplicationConnectRequest): Promise<mercury.ServerStream<padlock__ApplicationConnectRequest, padlock__ApplicationConnectUpdate>> {
		return this.StartServerStream<padlock__ApplicationConnectRequest, padlock__ApplicationConnectUpdate>("ApplicationConnect", req, padlock__ApplicationConnectUpdate.Parse);
	}
	public async ModuleListSlots(req: padlock__ModuleListSlotsRequest): Promise<padlock__ModuleListSlotsResponse> {
		return this.SendUnary("ModuleListSlots", mercury.HTTPMethod.POST, req, padlock__ModuleListSlotsResponse.Parse);
	}
}
